#!/usr/bin/env node

const prog = require('commander');
const options = require('./options');
const CONSTANTS = require('./constants');
const config = require('./config');
const utils = require('./utils');
const possibilities = require('./possibilities');
const defaults = {
    cwd: null,
    upstream: false,
    target: null
};

(async () => {
    try {
        const confStr = await config.parseConfig();
        Object.assign(defaults, confStr);
        
        // Parse options from command line and merge with the default working config.
        prog.usage('[options] [path ...]')
        options.parse(options.to).forEach(op => prog.option(...op));
        prog.parse(process.argv);

        // Merge the config to create defaults
        const payload = options.merge(defaults, options.to, prog);
        
        if (prog.args.length !== 1) {
            // If not found print in the console
            throw new Error('Too many or too little arguments.');
        }

        // Get the full or fragmented file name to be searched.
        payload.target = utils.normalizeTarget(prog.args[0]);
        payload.rawTarget = prog.args[0];
        const resp = await possibilities(payload);

        if (!resp.length) {
            throw new Error('No matching dir name found');
        }

        config.writeHist(config.type.CMD_HIST, resp[0]);
        console.log(`${CONSTANTS.SUCCESS_CODE_CTRL};${resp[0]}`); 
    } catch (e) {
        console.error(`${CONSTANTS.ERROR_CODE};${e.stack}`);
    }
})();
